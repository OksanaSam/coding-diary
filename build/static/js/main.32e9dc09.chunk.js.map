{"version":3,"sources":["components/firebaseConfig.jsx","components/Cards.jsx","components/ColorPicker.jsx","components/SelectedTools.jsx","components/NewEntry.jsx","components/Home.jsx","components/Info.jsx","components/EmailPasswordForm.jsx","components/SignInModal.jsx","components/Header.jsx","components/Footer.jsx","App.js","use-debounce.jsx","serviceWorker.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","apps","length","initializeApp","initializeFirebase","Cards","props","handleConsole","console","log","newUser","user","useContext","UserContext","items","className","map","item","key","uniqueId","onClick","id","database","ref","once","snapshot","data","val","child","remove","ColorPicker","state","displayColorPicker","color","r","g","b","a","handleClick","setState","handleClose","handleChange","rgb","styles","reactCSS","width","height","borderRadius","background","this","swatch","padding","boxShadow","display","cursor","popover","position","zIndex","cover","top","right","bottom","left","style","onChange","Component","SelectedTools","name","value","selectedOptions","e","Swal","fire","title","text","confirmButtonText","includes","target","setSelectedOptions","localStorage","setItem","JSON","stringify","option","selected","disabled","ind","index","newOptions","splice","handleToolDelete","NewEntry","useState","isChecked","setChecked","parse","getItem","inputValue","setInputValue","setItems","useEffect","globalCheckbox","handleCardSubmit","dbRef","obj","tags","entries","set","push","on","entryList","handleCardsAdd","handleDelete","newItems","currentDate","format","type","checked","backgroundColor","handleDateChange","onSelect","handleDateSelect","onSubmit","preventDefault","done","Home","Date","setDate","htmlFor","handleGlobalChecked","defaultChecked","displayName","date","Info","SubmitButton","EmailPasswordForm","email","setEmail","password","setPassword","required","placeholder","SignInModal","isOpen","modalIsOpen","ariaHideApp","onAfterOpen","onRequestClose","closeModal","contentLabel","googleSignin","handleGitHubLogin","handleTwitterLogin","signInWithEmailAndPassword","createUserWithEmailAndPassword","Header","isClosed","setisClosed","setIsOpen","openModal","signOut","auth","then","handleUserChange","handleLogIn","error","twitterGoogleSignIn","enteredProvider","provider","signInWithPopup","result","credential","accessToken","catch","code","message","to","fake","src","photoUrl","alt","tabIndex","currentUser","GoogleAuthProvider","GithubAuthProvider","addScope","handleDisplayName","additionalUserInfo","username","TwitterAuthProvider","Footer","getFullYear","showAlert","colorTheme","store","imageWidth","imageHeight","confirmButtonColor","href","rel","data-toggle","role","data-placement","data-tip","data-for","React","createContext","firebaseAppAuth","withFirebaseAuth","setGlobalCheckbox","setUser","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","setDisplayName","isLoggedIn","setIsLoggedIn","setFake","onAuthStateChanged","dbUser","photoURL","uid","algoliasearch","setColorTheme","basename","process","toggleColorTheme","prevState","boolean","newDisplayName","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.32e9dc09.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\n\n// Initialize Firebase\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAUgQEbOBcqZdf_L0Sgm9DQyINiHuEqIVE\",\n    authDomain: \"coding-diary-d8ded.firebaseapp.com\",\n    databaseURL: \"https://coding-diary-d8ded.firebaseio.com\",\n    projectId: \"coding-diary-d8ded\",\n    storageBucket: \"coding-diary-d8ded.appspot.com\",\n    messagingSenderId: \"309101571735\",\n    appId: \"1:309101571735:web:1d74e9b8c9dd4e4e4f43d2\"\n  };\n\n  function initializeFirebase() {\n    // Prevent reinitializing the app in snack.\n    if (!firebase.apps.length) {\n      return firebase.initializeApp(firebaseConfig);\n    }\n  }\n  initializeFirebase();\n// firebase.initializeApp(firebaseConfig);\n\nexport default firebaseConfig;\n","import React, { useContext } from 'react';\nimport CardNew from './Card';\nimport firebase from 'firebase/app';\nimport { UserContext } from '../App';\n\nconst Cards = (props) => {\n  const handleConsole = () => {\n    console.log(newUser.user);\n  };\n\n  const newUser = useContext(UserContext);\n\n  const handleCardDelete = (id) => {\n    console.log('deleted', id);\n    const dbRef = firebase.database().ref(`users/${props.user}`);\n    dbRef.child(id).remove();\n  };\n\n  const handleCardEdit = (id) => {\n    console.log('edited', id);\n    const dbRef = firebase.database().ref(`users/${props.user}`);\n    dbRef.once('value', (snapshot) => {\n      const data = snapshot.val();\n      console.log(data);\n      // if (data[id].isRead) {\n      //   dbRef.child(index).update({isRead: false});\n      // } else {\n      //   dbRef.child(index).update({isRead: true});\n      // }\n    });\n  };\n\n  // const handleDelete = (index) => {\n  //     if (!props.user) {\n  //         Swal.fire({\n  //           title: 'Oops...',\n  //           text: 'Please sign in',\n  //           confirmButtonText: 'Ok',\n  //         })\n  //     } else {\n  //         const dbRef = firebase.database().ref(`users/${props.user.displayName}`);\n  //         dbRef.child(index).remove();\n  //     }\n  // };\n  return (\n    <>\n      {props.items ? (\n        <ul className=\"here\">\n          {props.items.map((item) => {\n            return (\n              <li className=\"listResult\" key={item.uniqueId}>\n                <p>hello</p>\n                {/* <CardNew\n                                item={item}\n                            /> */}\n                <button onClick={() => handleCardEdit(item.uniqueId)}>edit</button>\n                <button onClick={() => handleCardDelete(item.uniqueId)}>delete</button>\n                <button onClick={handleConsole}>console</button>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>Loading...</p>\n      )}\n      {/* <p>{newUser.user.displayName}</p> */}\n    </>\n  );\n};\n\nexport default Cards;\n","import React, { Component } from 'react'\nimport reactCSS from 'reactcss'\nimport { SketchPicker } from 'react-color'\n\nclass ColorPicker extends Component {\n  state = {\n    displayColorPicker: false,\n    color: {\n      r: '241',\n      g: '112',\n      b: '19',\n      a: '1',\n    },\n  };\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\n  };\n\n  handleClose = () => {\n    this.setState({ displayColorPicker: false })\n  };\n\n  handleChange = (color) => {\n    this.setState({ color: color.rgb })\n  };\n\n  render() {\n\n    const styles = reactCSS({\n      'default': {\n        color: {\n          width: '36px',\n          height: '14px',\n          borderRadius: '2px',\n          background: `rgba(${ this.state.color.r }, ${ this.state.color.g }, ${ this.state.color.b }, ${ this.state.color.a })`,\n        },\n        swatch: {\n          padding: '5px',\n          background: '#fff',\n          borderRadius: '1px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        },\n        popover: {\n          position: 'absolute',\n          zIndex: '2',\n        },\n        cover: {\n          position: 'fixed',\n          top: '0px',\n          right: '0px',\n          bottom: '0px',\n          left: '0px',\n        },\n      },\n    });\n\n    return (\n      <div>\n        <div style={ styles.swatch } onClick={ this.handleClick }>\n          <div style={ styles.color } />\n        </div>\n        { this.state.displayColorPicker ? <div style={ styles.popover }>\n          <div style={ styles.cover } onClick={ this.handleClose }/>\n          <SketchPicker color={ this.state.color } onChange={ this.handleChange } />\n        </div> : null }\n\n      </div>\n    )\n  }\n}\n\nexport default ColorPicker","import React from 'react';\nimport Swal from 'sweetalert2';\n\nfunction SelectedTools(props) {\n  const options = [\n    { name: 'Select…', value: '' },\n    { name: 'JavaScript', value: 'JavaScript' },\n    { name: 'React', value: 'React' },\n    { name: 'Vanilla', value: 'Vanilla' },\n    { name: 'Other', value: 'Other' },\n  ];\n\n  const handleToolDelete = (index) => {\n    const newOptions = [...props.selectedOptions];\n    newOptions.splice(index, 1);\n    props.setSelectedOptions(newOptions);\n  };\n\n  const handleSelect = (e) => {\n    if (props.selectedOptions.length > 5) {\n      Swal.fire({\n        title: 'Hm...',\n        text: \"You can't add more than 5 tags.\",\n        confirmButtonText: 'Ok',\n      });\n    } else if (props.selectedOptions.includes(e.target.value)) {\n      Swal.fire({\n        title: 'Hm...',\n        text: 'You have already added this tag!',\n        confirmButtonText: 'Ok',\n      });\n    } else {\n      props.setSelectedOptions([...props.selectedOptions, e.target.value]);\n      localStorage.setItem('data', JSON.stringify(props.selectedOptions));\n    }\n  };\n\n  return (\n    <>\n      <select name=\"tool\" id=\"tool\" value={props.selectedOptions} onChange={handleSelect}>\n        {options.map((option) => (\n          <option\n            key={option.value}\n            selected={option.value === null ? 'selected' : null}\n            value={option.value}\n            disabled={option.value === null ? true : null}\n          >\n            {option.name}\n          </option>\n        ))}\n      </select>\n      <ul>\n        {props.selectedOptions.map((option, ind) => {\n          return (\n            <>\n              <li key={props.selectedOptions.length}>{option}</li>\n              {props.selectedOptions.length > 0 ? (\n                <>\n                  <button onClick={() => handleToolDelete(ind)}>X</button>\n                </>\n              ) : null}\n            </>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\nexport default SelectedTools;\n","import React, { useState, useEffect } from 'react';\nimport firebase from 'firebase/app';\n// import styled, { css } from 'styled-components';\nimport Swal from 'sweetalert2';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { format, compareAsc } from 'date-fns';\nimport SelectedTools from './SelectedTools';\n\nconst NewEntry = (props) => {\n  const [isChecked, setChecked] = useState(false);\n  const [textArea, setTextArea] = useState('');\n\n  const [selectedOptions, setSelectedOptions] = useState(\n    JSON.parse(localStorage.getItem('selectedTools')) || []\n  );\n\n  const [inputValue, setInputValue] = useState('');\n  const [items, setItems] = useState(JSON.parse(localStorage.getItem('items')) || []);\n\n  useEffect(() => {\n    setChecked(props.globalCheckbox);\n    localStorage.setItem('selectedTools', JSON.stringify(selectedOptions));\n    localStorage.setItem('items', JSON.stringify(items));\n  }, [props.globalCheckbox, selectedOptions, items]);\n\n  const handleChecked = () => {\n    setChecked(!isChecked);\n  };\n\n  const handleTextAreaChange = (e) => {\n    setTextArea(e.target.value);\n    console.log(textArea);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!inputValue) {\n      Swal.fire({\n        title: 'Hm...',\n        text: 'Please enter your text',\n        confirmButtonText: 'Ok',\n      });\n    } else {\n      // const newItems = [...items];\n      // newItems.push({ text: inputValue, done: false });\n      setItems([...items, { text: inputValue, done: false }]);\n      localStorage.setItem('items', JSON.stringify(items));\n      setInputValue('');\n    }\n  };\n\n  const handleCardSubmit = async () => {\n    if (!props.user) {\n      Swal.fire({\n        title: 'Oops...',\n        text: 'Please sign in',\n        confirmButtonText: 'Ok',\n      });\n    } else if (items.length < 1) {\n      Swal.fire({\n        title: 'Oops...',\n        text: 'Please add at least one entry!',\n        confirmButtonText: 'Ok',\n      });\n    } else {\n      const dbRef = await firebase.database().ref(`users/${props.user}`);\n      console.log(dbRef);\n      const obj = { tags: selectedOptions, entries: items };\n      if (dbRef === null) {\n        firebase\n          .database()\n          .ref('users/' + props.user)\n          .set(obj);\n      } else {\n        dbRef.push(obj);\n      }\n      console.log('added');\n      setItems([]);\n      setSelectedOptions([]);\n\n      dbRef.on('value', (snapshot) => {\n        const data = snapshot.val();\n\n        console.log('response from database', data);\n\n        const entryList = [];\n        for (let key in data) {\n          entryList.push({\n            log: data[key],\n            uniqueId: key,\n          });\n        }\n        props.handleCardsAdd(entryList);\n        // setItems(entryList)\n      });\n    }\n  };\n\n  const handleClick = (index) => {\n    const newItems = [...items];\n    newItems[index].done = !newItems[index].done;\n    setItems(newItems);\n  };\n\n  const handleDelete = (index) => {\n    const newItems = [...items];\n    newItems.splice(index, 1);\n    setItems(newItems);\n  };\n\n  return (\n    <>\n      <SelectedTools selectedOptions={selectedOptions} setSelectedOptions={setSelectedOptions} />\n      <p>{props.item}</p>\n      {/* <p>{props.currentDate ? `${props.currentDate.getMonth()} ${props.currentDate.getDate()} ${props.currentDate.getFullYear()}` : null}</p> */}\n      <p>{props.currentDate ? format(props.currentDate, 'do MMMM yyyy') : null}</p>\n      <input type=\"checkbox\" onChange={() => handleChecked(props.item)} checked={isChecked} />\n      <button onClick={() => handleDelete(props.item)}>delete</button>\n      <DatePicker\n        styles={{ backgroundColor: 'blue' }}\n        selected={props.currentDate}\n        onChange={props.handleDateChange}\n        onSelect={props.handleDateSelect}\n      />\n\n      <form onSubmit={handleSubmit}>\n        <label>\n          <input type=\"text\" value={inputValue} onChange={(e) => setInputValue(e.target.value)} />\n        </label>\n        <button>Add</button>\n      </form>\n\n      <ul>\n        {items.map((item, id) => (\n          <li key={id}>\n            <label>\n              <input type=\"checkbox\" checked={item.done} onClick={() => handleClick(id)} />\n              <span className={item.done ? 'done' : null}>{item.text}</span>\n              <button onClick={() => handleDelete(id)}>X</button>\n            </label>\n          </li>\n        ))}\n      </ul>\n      <button onClick={handleCardSubmit}>Save Entry</button>\n    </>\n  );\n};\n\nexport default NewEntry;\n","import React, { useState } from 'react';\nimport Cards from './Cards';\nimport ColorPicker from './ColorPicker';\nimport NewEntry from './NewEntry';\n\nfunction Home(props) {\n  const [currentDate, setDate] = useState(new Date());\n  const handleDateChange = (date) => {\n    setDate(date);\n  };\n\n  const handleDateSelect = (date) => {\n    setDate(date);\n  };\n  return (\n    <>\n      <label htmlFor=\"globalCheckbox\">Global Checkbox</label>\n      <input\n        name=\"globalCheckbox\"\n        type=\"checkbox\"\n        onChange={props.handleGlobalChecked}\n        defaultChecked={props.globalCheckbox}\n      />\n\n      <NewEntry\n        handleCardsAdd={props.handleCardsAdd}\n        currentDate={currentDate}\n        displayName={props.displayName}\n        user={props.user}\n        handleDateChange={handleDateChange}\n        handleDateSelect={handleDateSelect}\n        item=\"new entry\"\n        globalCheckbox={props.globalCheckbox}\n      />\n      <Cards items={props.items} user={props.user} />\n      <ColorPicker />\n    </>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction Info() {\n  return (\n    <>\n      <p>Info</p>\n    </>\n  );\n}\n\nexport default Info;\n","import React, { useState } from 'react';\n\nconst SubmitButton = props =>\n<button {...props}>submit</button>;\n\nconst EmailPasswordForm = ( {onSubmit} ) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  return (\n    <>\n    <input\n      type=\"email\"\n      value={email}\n      required\n      onChange={(e) => setEmail(e.target.value)}\n\n    />\n    <input\n      type=\"password\"\n      value={password}\n      required\n      placeholder='enter password'\n      onChange={(e) => setPassword(e.target.value)}\n    />\n      \n      <SubmitButton onClick={() => onSubmit(email, password)} />\n    </>\n  );\n}\n\nexport default EmailPasswordForm;","import React from 'react';\nimport Modal from 'react-modal';\nimport EmailPasswordForm from './EmailPasswordForm';\nimport { FaTwitterSquare, FaGithub, FaGoogle, FaFacebookSquare } from 'react-icons/fa';\n// import styled, { css } from 'styled-components'\n\n// const Button = styled.button`\n//   background: transparent;\n//   border-radius: 3px;\n//   border: 2px solid blue;\n//   color: darkblue;\n//   margin: 0 1em;\n//   padding: 0.25em 1em;\n\n//   ${props =>\n//     props.primary &&\n//     css`\n//       background: blue;\n//       color: white;\n//     `};\n// `\n\nconst SignInModal = (props) => {\n  function afterOpenModal() {}\n\n  return (\n    <>\n      <Modal\n        isOpen={props.modalIsOpen}\n        ariaHideApp={false}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={props.closeModal}\n        contentLabel=\"Example Modal\"\n      >\n        <button onClick={props.closeModal}>close</button>\n        <button onClick={props.googleSignin}>\n          <FaGoogle />\n        </button>\n        <button onClick={() => console.log('facebook')}>\n          <FaFacebookSquare />\n        </button>\n        <button onClick={props.handleGitHubLogin}>\n          <FaGithub />\n        </button>\n        <button onClick={props.handleTwitterLogin}>\n          <FaTwitterSquare />\n        </button>\n\n        <div>\n          <p>OR</p>\n        </div>\n\n        <div>\n          <h1>sign in with email</h1>\n          <EmailPasswordForm onSubmit={props.signInWithEmailAndPassword} />\n        </div>\n\n        <div>\n          <h1>Don't have an account? Sign up</h1>\n          <EmailPasswordForm onSubmit={props.createUserWithEmailAndPassword} />\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default SignInModal;\n","import React, { useState, useEffect, useReducer, lazy, Suspense } from 'react';\nimport { HashRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport { FaBars } from 'react-icons/fa';\nimport Authentication from './Authentication';\nimport { BsFileEarmarkCode } from 'react-icons/bs';\nimport firebase from 'firebase/app';\nimport SignInModal from './SignInModal';\n\nfunction Header(props) {\n  const [isClosed, setisClosed] = useState(true);\n\n  const [colorTheme, setColorTheme] = useState('blue');\n\n  const toggleColorTheme = () => {\n    setColorTheme((prevState) => (prevState === 'blue' ? 'pink' : 'blue'));\n  };\n\n  const [email, setEmail] = useState('hello@hh');\n\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const signOut = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(\n        function () {\n          props.handleUserChange(null);\n          props.handleLogIn(false);\n        },\n        function (error) {\n          console.log('Signout Failed');\n        }\n      );\n  };\n\n  const twitterGoogleSignIn = (enteredProvider) => {\n    const provider = enteredProvider;\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(function (result) {\n        const token = result.credential.accessToken;\n        setIsOpen(false);\n        props.handleLogIn(true);\n      })\n      .catch(function (error) {\n        console.log('error', error.code, error.message, error.credential);\n      });\n  };\n\n  const handleGitHubLogin = () => {\n    const provider = new firebase.auth.GithubAuthProvider();\n    provider.addScope('public_repo');\n    provider.addScope('read:org');\n    provider.addScope('read:user');\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(function (result) {\n        setIsOpen(false);\n        props.handleLogIn(true);\n        props.handleDisplayName(result.additionalUserInfo.username);\n      })\n      .catch(function (error) {\n        console.log(error.code, error.message, error.email, error.credential);\n      });\n  };\n\n  return (\n    <>\n      <header>\n        <nav className=\"navigation\">\n          <div className=\"navWrapper\">\n            <div className=\"brand\">\n              <BsFileEarmarkCode />\n              <p>CodingDiary</p>\n            </div>\n            {/* <button className=\"toggle\" onClick={props.toggleColorTheme}>Toggle</button> */}\n            <ul className={`menu ${isClosed ? null : 'open'}`}>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/info\">About</Link>\n              </li>\n              <li>\n                {props.user !== null ? (\n                  <button onClick={signOut}>Sign out</button>\n                ) : (\n                  <button onClick={openModal}>Sign in</button>\n                )}\n              </li>\n              {props.fake ? <img className=\"avatar\" src={props.fake.photoUrl} alt=\"\" /> : null}\n            </ul>\n            <button className=\"hamburger\" tabIndex=\"0\" onClick={() => setisClosed(!isClosed)}>\n              <FaBars />\n            </button>\n          </div>\n        </nav>\n        {props.user !== null ? (\n          <div>\n            {props.fake ? (\n              <div>\n                <p>HELLO CONTACT Fake {props.fake.displayName}</p>\n                <img src={props.fake.photoUrl} alt=\"\" />\n              </div>\n            ) : null}\n            <p>\n              Hello,{' '}\n              {firebase.auth().currentUser.displayName ||\n                JSON.parse(localStorage.getItem('displayName'))}\n            </p>\n            <button onClick={signOut}>Sign out</button>\n          </div>\n        ) : (\n          <button onClick={openModal}>Please sign in</button>\n        )}\n        <SignInModal\n          modalIsOpen={modalIsOpen}\n          closeModal={closeModal}\n          googleSignin={() => twitterGoogleSignIn(new firebase.auth.GoogleAuthProvider())}\n          handleGitHubLogin={handleGitHubLogin}\n          handleTwitterLogin={() => twitterGoogleSignIn(new firebase.auth.TwitterAuthProvider())}\n          signInWithEmailAndPassword={props.signInWithEmailAndPassword}\n          createUserWithEmailAndPassword={props.createUserWithEmailAndPassword}\n        />\n      </header>\n    </>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n// import googlePlay from '../assets/128x128.jpg';\n// import appleStore from '../assets/128x128copy.jpg';\nimport { FaLinkedinIn, FaExternalLinkAlt, FaTwitter, FaGithub } from 'react-icons/fa';\nimport Swal from 'sweetalert2';\n// import SelectLanguage from './SelectLanguage';\n\nconst Footer = (props) => {\n  const date = new Date().getFullYear();\n  const colorTheme = props.colorTheme;\n\n  const showAlert = (store) => {\n    Swal.fire({\n      title: 'Hang on for updates!',\n      imageWidth: 400,\n      imageHeight: 400,\n      confirmButtonColor: '#192B4D',\n      text: `The app will be soon available in ${store}!`,\n      confirmButtonText: 'Cool',\n    });\n  };\n\n  return (\n    <footer>\n      <div className=\"upperFooter\">\n        <ul className=\"socials\">\n          <li>\n            <a\n              href=\"https://www.linkedin.com/in/oksana-samokhvalova/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FaLinkedinIn />\n            </a>\n          </li>\n          <li>\n            <a href=\"https://twitter.com/oksanadev/\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <FaTwitter />\n            </a>\n          </li>\n          <li>\n            <a href=\"https://www.oksanadev.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <FaExternalLinkAlt />\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://github.com/OksanaSam/\"\n              data-toggle=\"tooltip\"\n              role=\"tooltip\"\n              data-placement=\"top\"\n              title=\"Some tooltip text!\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FaGithub />\n            </a>\n          </li>\n        </ul>\n        {/* <div className=\"languageSelect\">\n          <label htmlFor=\"language\" className=\"visuallyHidden\">\n            Select language\n          </label>\n          <SelectLanguage />\n        </div> */}\n        <ul className=\"appDl\">\n          <li data-tip data-for=\"happyFace\">\n            <a onClick={() => showAlert('Google Play')}>\n              <img src=\"\" />\n            </a>\n          </li>\n          <li>\n            <a onClick={() => showAlert('AppStore')}>\n              <img src=\"\" />\n            </a>\n          </li>\n        </ul>\n      </div>\n      <p className=\"copyright\"> Copyright © oksanadev {date}</p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect, useReducer, lazy, Suspense } from 'react';\nimport './styles/index.scss';\nimport firebaseConfig from './components/firebaseConfig.jsx';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport withFirebaseAuth from 'react-with-firebase-auth';\n// import Authentication from './components/Authentication';\nimport useDebounce from './use-debounce';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport algoliasearch from 'algoliasearch/lite';\n// import { InstantSearch, SearchBox, Hits } from 'react-instantsearch-dom';\n\nimport { HashRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport { MdAccountCircle } from 'react-icons/md';\nimport Home from './components/Home';\nimport Info from './components/Info';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nimport {\n  InstantSearch,\n  Hits,\n  SearchBox,\n  RefinementList,\n  Pagination,\n  Highlight,\n} from 'react-instantsearch-dom';\nimport PropTypes from 'prop-types';\n\nexport const UserContext = React.createContext();\n\nconst firebaseAppAuth = firebase.auth();\n\nfunction App({ createUserWithEmailAndPassword, signInWithEmailAndPassword }) {\n  const [items, setItems] = useState([]);\n\n  const [globalCheckbox, setGlobalCheckbox] = useState(false);\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState();\n  const [isSearching, setIsSearching] = useState(false);\n  const debouncedItems = useDebounce(items, 500);\n  const [displayName, setDisplayName] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [fake, setFake] = useState(null);\n\n  const [checkboxCounter, setCheckboxCounter] = useState(0);\n\n  const handleUserChange = (newUser) => {\n    setUser(newUser);\n  };\n\n  const handleDisplayName = (newDisplayName) => {\n    setDisplayName(newDisplayName);\n    localStorage.setItem('displayName', JSON.stringify(newDisplayName));\n  };\n\n  const handleLogIn = (boolean) => {\n    setIsLoggedIn(boolean);\n  };\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user !== null) {\n        const dbUser = {\n          email: user.email,\n          displayName: user.displayName ? user.displayName : user.email,\n          photoUrl: user.photoURL,\n          uid: user.uid,\n        };\n        setUser(user.uid);\n        setFake(dbUser);\n      } else {\n        console.log('no user');\n      }\n    });\n\n    let dbRef;\n    if (user === null) {\n      dbRef = firebase.database().ref(`users/Oksana Samokhvalova`);\n    } else {\n      dbRef = firebase.database().ref(`users/${firebase.auth().currentUser.uid}`);\n    }\n    dbRef.on('value', (snapshot) => {\n      const data = snapshot.val();\n\n      console.log('response from database', data);\n\n      let entryList = [];\n      for (let key in data) {\n        entryList.push({\n          log: data[key],\n          uniqueId: key,\n        });\n      }\n      setItems(entryList);\n    });\n  }, [user, isLoggedIn]);\n\n  const handleGlobalChecked = () => {\n    setGlobalCheckbox(!globalCheckbox);\n  };\n\n  // const Entries = React.lazy(() => import('./Entries'));\n\n  const handleCardsAdd = (newItems) => {\n    setItems(newItems);\n  };\n\n  // const [user, dispatch] = useReducer(reducer, initialState);\n  const searchClient = algoliasearch('MECACEVTIQ', '992684a9f8b18acf0050954944f2f42b');\n  const [colorTheme, setColorTheme] = useState('blue');\n\n  const toggleColorTheme = () => {\n    setColorTheme((prevState) => (prevState === 'blue' ? 'pink' : 'blue'));\n  };\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Header\n        colorTheme={colorTheme}\n        toggleColorTheme={toggleColorTheme}\n        handleLogIn={handleLogIn}\n        displayName={displayName}\n        handleUserChange={handleUserChange}\n        handleDisplayName={handleDisplayName}\n        user={user}\n        signInWithEmailAndPassword={signInWithEmailAndPassword}\n        createUserWithEmailAndPassword={createUserWithEmailAndPassword}\n        fake={fake}\n      />\n      <main className={`main-container ${colorTheme}`}>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/info\" component={Info} />\n        </Switch>\n        <Home\n          handleGlobalChecked={handleGlobalChecked}\n          globalCheckbox={globalCheckbox}\n          user={user}\n          items={items}\n          handleCardsAdd={handleCardsAdd}\n          displayName={displayName}\n        />\n      </main>\n      <Footer />\n\n      {/* <InstantSearch searchClient={searchClient} indexName=\"dev_OKSANA\">\n        <div className=\"inputSearch\">\n          <h2>Another coding day!</h2>\n          <label className=\"visuallyHidden\">Add another story to your coding journey</label>\n        </div> */}\n    </Router>\n  );\n}\n\nexport default withFirebaseAuth({\n  firebaseAppAuth,\n})(App);\n","import React, { useState, useEffect } from 'react';\n\n// Our hook\nexport default function useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Set debouncedValue to value (passed in) after the specified delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Return a cleanup function that will be called every time ...\n      // ... useEffect is re-called. useEffect will only be re-called ...\n      // ... if value changes (see the inputs array below). \n      // This is how we prevent debouncedValue from changing if value is ...\n      // ... changed within the delay period. Timeout gets cleared and restarted.\n      // To put it in context, if the user is typing within our app's ...\n      // ... search box, we don't want the debouncedValue to update until ...\n      // ... they've stopped typing for more than 500ms.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    // Only re-call effect if value changes\n    // You could also add the \"delay\" var to inputs array if you ...\n    // ... need to be able to change that dynamically.\n    [value] \n  );\n\n  return debouncedValue;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}