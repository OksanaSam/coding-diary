{"version":3,"sources":["components/firebaseConfig.jsx","components/EditCardModal.jsx","components/Card.jsx","components/Cards.jsx","components/SelectedTools.jsx","components/NewEntry.jsx","components/SignInModal.jsx","components/Header.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","apps","length","initializeApp","initializeFirebase","EditCardModal","props","useState","inputValue","setInputValue","item","log","entries","editedEntries","setEditedEntries","Modal","show","onHide","handleClose","Header","Title","Body","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","required","onKeyDown","key","text","preventDefault","Swal","fire","title","confirmButtonText","className","map","entry","id","indexOf","onClick","index","newItems","splice","handleDelete","Footer","Button","style","backgroundColor","dbRef","database","ref","user","once","snapshot","data","val","console","uniqueId","child","update","Card","showEditModal","setShowEditModal","data-tip","data-for","entryDate","remove","tags","tag","Cards","items","SelectedTools","htmlFor","name","selectedOptions","includes","setSelectedOptions","localStorage","setItem","JSON","stringify","option","selected","disabled","ind","newOptions","handleToolDelete","NewEntry","Date","currentDate","setDate","parse","getItem","setItems","useEffect","handleCardSubmit","a","obj","format","set","push","on","entryList","handleCardsAdd","styles","date","onSelect","onSubmit","done","SignInModal","overlay","position","top","left","right","bottom","content","background","border","overflow","WebkitOverflowScrolling","borderRadius","outline","padding","isOpen","modalIsOpen","ariaHideApp","onRequestClose","closeModal","contentLabel","googleSignin","handleGitHubLogin","handleTwitterLogin","setIsOpen","twitterGoogleSignIn","enteredProvider","provider","auth","signInWithPopup","then","handleLogIn","catch","error","message","signOut","handleUserChange","handleUserInfo","userInfo","src","photoUrl","alt","GoogleAuthProvider","GithubAuthProvider","addScope","TwitterAuthProvider","signInWithEmailAndPassword","createUserWithEmailAndPassword","getFullYear","scroll","scrollToTop","href","rel","firebaseAppAuth","withFirebaseAuth","setUser","isLoggedIn","setIsLoggedIn","setUserInfo","onAuthStateChanged","dbUser","email","displayName","photoURL","uid","currentUser","boolean","newUser","newUserInfo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.648450f4.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\n\n// Initialize Firebase\nconst firebaseConfig = {\n  apiKey: 'AIzaSyAUgQEbOBcqZdf_L0Sgm9DQyINiHuEqIVE',\n  authDomain: 'coding-diary-d8ded.firebaseapp.com',\n  databaseURL: 'https://coding-diary-d8ded.firebaseio.com',\n  projectId: 'coding-diary-d8ded',\n  storageBucket: 'coding-diary-d8ded.appspot.com',\n  messagingSenderId: '309101571735',\n  appId: '1:309101571735:web:1d74e9b8c9dd4e4e4f43d2',\n};\n\nfunction initializeFirebase() {\n  // Prevent reinitializing the app in snack.\n  if (!firebase.apps.length) {\n    return firebase.initializeApp(firebaseConfig);\n  }\n}\ninitializeFirebase();\n\nexport default firebaseConfig;\n","import React, { useState } from 'react';\nimport firebase from 'firebase/app';\nimport Swal from 'sweetalert2';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nfunction EditCardModal(props) {\n  const [inputValue, setInputValue] = useState('');\n  const [editedEntries, setEditedEntries] = useState(props.item.log.entries);\n\n  const handleDelete = (index) => {\n    const newItems = [...editedEntries];\n    newItems.splice(index, 1);\n    setEditedEntries(newItems);\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    const dbRef = firebase.database().ref(`users/${props.user}`);\n    dbRef.once('value', (snapshot) => {\n      const data = snapshot.val();\n      console.log(data[props.uniqueId].entries);\n      if (data[props.uniqueId].entries) {\n        dbRef.child(props.uniqueId).update({ entries: editedEntries });\n      }\n    });\n    props.handleClose();\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      if (!inputValue) {\n        e.preventDefault();\n        Swal.fire({\n          title: 'Hm...',\n          text: 'Please enter your text',\n          confirmButtonText: 'Ok',\n        });\n      } else {\n        setEditedEntries([...editedEntries, { text: inputValue }]);\n        e.preventDefault();\n        setInputValue('');\n      }\n    }\n  };\n\n  return (\n    <>\n      <Modal show={props.show} onHide={props.handleClose}>\n        <Modal.Header>\n          <Modal.Title>Edit</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"edit\">\n              <Form.Label>Delete entries or add new ones</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder={'Add entries'}\n                value={inputValue}\n                onChange={(e) => setInputValue(e.target.value)}\n                required\n                onKeyDown={handleKeyDown}\n              />\n            </Form.Group>\n            {!editedEntries ? null : (\n              <ul className=\"entries\">\n                {editedEntries.map((entry, id) => {\n                  return (\n                    <li key={editedEntries.indexOf(entry)}>\n                      <button onClick={() => handleDelete(id)}>X</button>\n                      {entry.text}\n                    </li>\n                  );\n                })}\n              </ul>\n            )}\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button style={{ backgroundColor: '#25c93f' }} onClick={handleFormSubmit}>\n            Save Changes\n          </Button>\n          <Button style={{ backgroundColor: '#ff5f55' }} onClick={props.handleClose}>\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default EditCardModal;\n","import React, { useState } from 'react';\nimport firebase from 'firebase/app';\nimport Swal from 'sweetalert2';\nimport EditCardModal from './EditCardModal';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { ImCheckmark } from 'react-icons/im';\nimport ReactTooltip from 'react-tooltip';\n\nfunction Card(props) {\n  const [showEditModal, setShowEditModal] = useState(false);\n\n  const handleCardDelete = (id) => {\n    if (!props.user) {\n      Swal.fire({\n        title: 'Oops...',\n        text: 'Please sign in',\n        confirmButtonText: 'Ok',\n      });\n    } else {\n      const dbRef = firebase.database().ref(`users/${props.user}`);\n      dbRef.child(id).remove();\n    }\n  };\n\n  const handleClose = () => {\n    setShowEditModal(false);\n  };\n\n  const handleCardEdit = (id) => {\n    if (!props.user) {\n      Swal.fire({\n        title: 'Oops...',\n        text: 'Please sign in',\n        confirmButtonText: 'Ok',\n      });\n    } else {\n      setShowEditModal(true);\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <EditCardModal\n        handleClose={handleClose}\n        show={showEditModal}\n        item={props.item}\n        user={props.user}\n        uniqueId={props.item.uniqueId}\n      />\n      <div className=\"cardButtons\">\n        <button\n          className=\"editButton\"\n          onClick={() => handleCardEdit(props.item.uniqueId)}\n          data-tip\n          data-for=\"edit\"\n        >\n          <EditIcon />\n          <ReactTooltip id=\"edit\">\n            <span>Edit entry</span>\n          </ReactTooltip>\n        </button>\n        <p data-tip data-for=\"date\">\n          {!props.item.log.entryDate ? null : props.item.log.entryDate}\n        </p>\n        <ReactTooltip id=\"date\">\n          <span>Date cannot be edited</span>\n        </ReactTooltip>\n        <button\n          className=\"deleteButton\"\n          onClick={() => handleCardDelete(props.item.uniqueId)}\n          data-tip\n          data-for=\"delete\"\n        >\n          <DeleteIcon />\n          <ReactTooltip id=\"delete\">\n            <span>Delete entry</span>\n          </ReactTooltip>\n        </button>\n      </div>\n      {!props.item.log.tags ? null : (\n        <ul className=\"tags\">\n          {props.item.log.tags.map((tag) => {\n            return <li key={props.item.log.tags.indexOf(tag)}>{tag}</li>;\n          })}\n        </ul>\n      )}\n      {!props.item.log.entries ? null : (\n        <ul className=\"entries\">\n          {props.item.log.entries.map((entry) => {\n            return (\n              <li key={props.item.log.entries.indexOf(entry)}>\n                <span>\n                  <ImCheckmark />\n                </span>\n                {entry.text}\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nfunction Cards(props) {\n  return (\n    <>\n      {props.items ? (\n        <ul>\n          {props.items.map((item) => {\n            return (\n              <li key={item.uniqueId}>\n                <Card item={item} user={props.user} />\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>No entries yet...</p>\n      )}\n    </>\n  );\n}\n\nexport default Cards;\n","import React from 'react';\nimport Swal from 'sweetalert2';\n\nfunction SelectedTools(props) {\n  const options = [\n    { name: 'Tags…', value: '' },\n    { name: 'JavaScript', value: 'JavaScript' },\n    { name: 'React', value: 'React' },\n    { name: 'Vanilla', value: 'Vanilla' },\n    { name: 'Other', value: 'Other' },\n  ];\n\n  const handleToolDelete = (index) => {\n    const newOptions = [...props.selectedOptions];\n    newOptions.splice(index, 1);\n    props.setSelectedOptions(newOptions);\n  };\n\n  const handleSelect = (e) => {\n    if (props.selectedOptions.length > 5) {\n      Swal.fire({\n        title: 'Hm...',\n        text: \"You can't add more than 5 tags.\",\n        confirmButtonText: 'Ok',\n      });\n    } else if (props.selectedOptions.includes(e.target.value)) {\n      Swal.fire({\n        title: 'Hm...',\n        text: 'You have already added this tag!',\n        confirmButtonText: 'Ok',\n      });\n    } else {\n      props.setSelectedOptions([...props.selectedOptions, e.target.value]);\n      localStorage.setItem('data', JSON.stringify(props.selectedOptions));\n    }\n  };\n\n  return (\n    <>\n      <label htmlFor=\"tool\">\n        <select name=\"tool\" id=\"tool\" value={props.selectedOptions} onChange={handleSelect}>\n          {options.map((option) => (\n            <option\n              key={option.value}\n              selected={option.value === null ? 'selected' : null}\n              value={option.value}\n              disabled={option.value === null ? true : null}\n            >\n              {option.name}\n            </option>\n          ))}\n        </select>\n      </label>\n      <ul className=\"selectedOptions\">\n        {props.selectedOptions.map((option, ind) => {\n          return (\n            <>\n              {props.selectedOptions.length > 0 ? (\n                <li key={props.selectedOptions.length}>\n                  <button onClick={() => handleToolDelete(ind)}>X</button>\n                  {option}\n                </li>\n              ) : null}\n            </>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\nexport default SelectedTools;\n","import React, { useState, useEffect } from 'react';\nimport firebase from 'firebase/app';\nimport AddIcon from '@material-ui/icons/Add';\nimport Swal from 'sweetalert2';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { format } from 'date-fns';\nimport SelectedTools from './SelectedTools';\n\nimport { TiDelete } from 'react-icons/ti';\n\nconst NewEntry = (props) => {\n  const [currentDate, setDate] = useState(new Date());\n  const handleDateChange = (date) => {\n    setDate(date);\n  };\n\n  const handleDateSelect = (date) => {\n    setDate(date);\n  };\n\n  const [selectedOptions, setSelectedOptions] = useState(\n    JSON.parse(localStorage.getItem('selectedTools')) || []\n  );\n\n  const [inputValue, setInputValue] = useState('');\n  const [items, setItems] = useState(JSON.parse(localStorage.getItem('items')) || []);\n\n  useEffect(() => {\n    localStorage.setItem('selectedTools', JSON.stringify(selectedOptions));\n    localStorage.setItem('items', JSON.stringify(items));\n  }, [selectedOptions, items]);\n\n  const handleInputSubmit = (e) => {\n    e.preventDefault();\n    if (!inputValue) {\n      Swal.fire({\n        title: 'Hm...',\n        text: 'Please enter your text',\n        confirmButtonText: 'Ok',\n      });\n    } else {\n      setItems([...items, { text: inputValue, done: false }]);\n      localStorage.setItem('items', JSON.stringify(items));\n      setInputValue('');\n    }\n  };\n\n  const handleCardSubmit = async () => {\n    if (!props.user) {\n      Swal.fire({\n        title: 'Oops...',\n        text: 'Please sign in',\n        confirmButtonText: 'Ok',\n      });\n    } else if (items.length < 1) {\n      Swal.fire({\n        title: 'Oops...',\n        text: 'Please add at least one entry!',\n        confirmButtonText: 'Ok',\n      });\n    } else {\n      const dbRef = await firebase.database().ref(`users/${props.user}`);\n      const obj = {\n        tags: selectedOptions,\n        entries: items,\n        entryDate: format(currentDate, 'do MMMM yyyy'),\n      };\n      if (dbRef === null) {\n        firebase\n          .database()\n          .ref('users/' + props.user)\n          .set(obj);\n      } else {\n        dbRef.push(obj);\n      }\n      setItems([]);\n      setSelectedOptions([]);\n\n      dbRef.on('value', (snapshot) => {\n        const data = snapshot.val();\n        const entryList = [];\n        for (let key in data) {\n          entryList.push({\n            log: data[key],\n            uniqueId: key,\n          });\n        }\n        props.handleCardsAdd(entryList);\n      });\n    }\n  };\n\n  const handleDelete = (index) => {\n    const newItems = [...items];\n    newItems.splice(index, 1);\n    setItems(newItems);\n  };\n\n  return (\n    <div className=\"newEntry\">\n      <div className=\"selectedDate\">\n        <DatePicker\n          styles={{ backgroundColor: 'blue' }}\n          selected={currentDate}\n          onChange={handleDateChange}\n          onSelect={handleDateSelect}\n        />\n      </div>\n      <SelectedTools selectedOptions={selectedOptions} setSelectedOptions={setSelectedOptions} />\n      <form onSubmit={handleInputSubmit}>\n        <label htmlFor=\"entry\">\n          <input\n            placeholder=\"Skills learned\"\n            type=\"text\"\n            name=\"entry\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n          />\n        </label>\n        <button>\n          <AddIcon />\n        </button>\n      </form>\n      <p>{currentDate ? format(currentDate, 'do MMMM yyyy') : null}</p>\n      <ul>\n        {items.map((item, id) => (\n          <li key={id}>\n            <button onClick={() => handleDelete(id)}>X</button>\n            <span>{item.text}</span>\n          </li>\n        ))}\n      </ul>\n      <button className=\"saveButton\" onClick={handleCardSubmit}>\n        Save Entry\n      </button>\n    </div>\n  );\n};\n\nexport default NewEntry;\n","import React from 'react';\nimport Modal from 'react-modal';\n\nimport { FaTwitterSquare, FaGithub, FaGoogle, FaWindowClose } from 'react-icons/fa';\n\nconst SignInModal = (props) => {\n  return (\n    <>\n      <Modal\n        style={{\n          overlay: {\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n          },\n          content: {\n            background: 'white',\n            position: 'absolute',\n            top: '25%',\n            left: '25%',\n            right: '25%',\n            bottom: '25%',\n            border: '1px solid #ccc',\n            overflow: 'auto',\n            WebkitOverflowScrolling: 'touch',\n            borderRadius: '10px',\n            outline: 'none',\n            padding: '20px',\n          },\n        }}\n        isOpen={props.modalIsOpen}\n        ariaHideApp={false}\n        onRequestClose={props.closeModal}\n        contentLabel=\"SignIn Modal\"\n      >\n        <button className=\"closeModalButton\" onClick={props.closeModal}>\n          <FaWindowClose />\n        </button>\n        <h3>Sign in with Gmail, GitHub or Twitter</h3>\n        <div className=\"modalButtons\">\n          <button className=\"gmailButton\" onClick={props.googleSignin}>\n            <FaGoogle />\n          </button>\n          <button className=\"gitHubButton\" onClick={props.handleGitHubLogin}>\n            <FaGithub />\n          </button>\n          <button className=\"twitterButton\" onClick={props.handleTwitterLogin}>\n            <FaTwitterSquare />\n          </button>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default SignInModal;\n","import React, { useState } from 'react';\nimport { BsFileEarmarkCode } from 'react-icons/bs';\nimport firebase from 'firebase/app';\nimport SignInModal from './SignInModal';\nimport Swal from 'sweetalert2';\n\nfunction Header(props) {\n  // Sign-In Modal\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  // Sign In with Twitter and Google via Firebase\n  const twitterGoogleSignIn = (enteredProvider) => {\n    const provider = enteredProvider;\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(() => {\n        setIsOpen(false);\n        props.handleLogIn(true);\n      })\n      .catch(function (error) {\n        Swal.fire({\n          title: 'Oops...',\n          text: `An error ${error.message} occurred`,\n          confirmButtonText: 'Ok',\n        });\n      });\n  };\n\n  // Sign In with GitHub via Firebase\n  const handleGitHubLogin = () => {\n    const provider = new firebase.auth.GithubAuthProvider();\n    provider.addScope('public_repo');\n    provider.addScope('read:org');\n    provider.addScope('read:user');\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(() => {\n        setIsOpen(false);\n        props.handleLogIn(true);\n      })\n      .catch((error) => {\n        Swal.fire({\n          title: 'Oops...',\n          text: `An error ${error.message} occurred`,\n          confirmButtonText: 'Ok',\n        });\n      });\n  };\n\n  // Sign Out with all providers via Firebase\n  const signOut = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(\n        () => {\n          props.handleUserChange(null);\n          props.handleLogIn(false);\n          props.handleUserInfo(null);\n        },\n        (error) => {\n          Swal.fire({\n            title: 'Oops...',\n            text: `Signout failed, an error ${error.message} occurred`,\n            confirmButtonText: 'Ok',\n          });\n        }\n      );\n  };\n\n  return (\n    <>\n      <header>\n        <nav className=\"navigation\">\n          <div className=\"navWrapper\">\n            <div className=\"brand\">\n              <BsFileEarmarkCode />\n              <p>CodingDiary</p>\n            </div>\n            <ul className=\"menu\">\n              <li>\n                {props.user !== null ? (\n                  <button onClick={signOut}>Sign out</button>\n                ) : (\n                  <button onClick={openModal}>Sign in</button>\n                )}\n              </li>\n              {props.userInfo ? (\n                <img className=\"avatar\" src={props.userInfo.photoUrl} alt=\"\" />\n              ) : null}\n            </ul>\n          </div>\n        </nav>\n        <SignInModal\n          modalIsOpen={modalIsOpen}\n          closeModal={closeModal}\n          googleSignin={() => twitterGoogleSignIn(new firebase.auth.GoogleAuthProvider())}\n          handleGitHubLogin={handleGitHubLogin}\n          handleTwitterLogin={() => twitterGoogleSignIn(new firebase.auth.TwitterAuthProvider())}\n          signInWithEmailAndPassword={props.signInWithEmailAndPassword}\n          createUserWithEmailAndPassword={props.createUserWithEmailAndPassword}\n        />\n      </header>\n    </>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport {\n  FaArrowCircleUp,\n  FaLinkedinIn,\n  FaExternalLinkAlt,\n  FaTwitter,\n  FaGithub,\n  FaReact,\n  FaRegCopyright,\n} from 'react-icons/fa';\n// * * * * Smooth Scroll Library\nimport { animateScroll as scroll } from 'react-scroll';\n\nfunction Footer() {\n  const date = new Date().getFullYear();\n\n  const scrollToTop = () => {\n    scroll.scrollToTop();\n  };\n\n  return (\n    <footer>\n      <div className=\"wrapper\">\n        <div className=\"upperFooter\">\n          <span className=\"scrollTop\" onClick={scrollToTop}>\n            <FaArrowCircleUp />\n          </span>\n          <ul className=\"socials\">\n            <li>\n              <a\n                href=\"https://www.linkedin.com/in/oksana-samokhvalova/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <FaLinkedinIn />\n              </a>\n            </li>\n            <li>\n              <a href=\"https://twitter.com/oksanadev/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <FaTwitter />\n              </a>\n            </li>\n            <li>\n              <a href=\"https://www.oksanadev.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <FaExternalLinkAlt />\n              </a>\n            </li>\n            <li>\n              <a href=\"https://github.com/OksanaSam/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <FaGithub />\n              </a>\n            </li>\n          </ul>\n        </div>\n        <p className=\"copyright\">\n          <FaRegCopyright /> {date} oksanadev.com{' '}\n          <span>\n            <FaReact />\n          </span>\n        </p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useState, useEffect } from 'react';\n\n// Styles\nimport './styles/index.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Firebase database\nimport firebaseConfig from './components/firebaseConfig.jsx';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport withFirebaseAuth from 'react-with-firebase-auth';\n\n// Components\nimport Cards from './components/Cards';\nimport NewEntry from './components/NewEntry';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nconst firebaseAppAuth = firebase.auth();\n\nfunction App({ createUserWithEmailAndPassword, signInWithEmailAndPassword }) {\n  const [items, setItems] = useState([]);\n  const [user, setUser] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userInfo, setUserInfo] = useState(null);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user !== null) {\n        const dbUser = {\n          email: user.email,\n          displayName: user.displayName ? user.displayName : user.email,\n          photoUrl: user.photoURL,\n          uid: user.uid,\n        };\n        setUser(user.uid);\n        setUserInfo(dbUser);\n      }\n    });\n\n    let dbRef;\n    // setting default user to Oksana (to retrieve the saved data from the database)\n    if (user === null) {\n      dbRef = firebase.database().ref(`users/wdDaqkYW5yaZwQGAUf9B9JzbZVu2`);\n    } else {\n      dbRef = firebase.database().ref(`users/${firebase.auth().currentUser.uid}`);\n    }\n    dbRef.on('value', (snapshot) => {\n      const data = snapshot.val();\n      let entryList = [];\n      for (let key in data) {\n        entryList.push({\n          log: data[key],\n          uniqueId: key,\n        });\n      }\n      setItems(entryList);\n    });\n  }, [user, isLoggedIn]);\n\n  const handleUserChange = (newUser) => {\n    setUser(newUser);\n  };\n\n  const handleUserInfo = (newUserInfo) => {\n    setUserInfo(newUserInfo);\n  };\n\n  const handleLogIn = (boolean) => {\n    setIsLoggedIn(boolean);\n  };\n\n  const handleCardsAdd = (newItems) => {\n    setItems(newItems);\n  };\n\n  return (\n    <div className=\"app\">\n      <Header\n        handleLogIn={handleLogIn}\n        handleUserChange={handleUserChange}\n        user={user}\n        signInWithEmailAndPassword={signInWithEmailAndPassword}\n        createUserWithEmailAndPassword={createUserWithEmailAndPassword}\n        userInfo={userInfo}\n        handleUserInfo={handleUserInfo}\n      />\n      <main>\n        <div className=\"wrapper\">\n          <NewEntry handleCardsAdd={handleCardsAdd} user={user} />\n          <Cards items={items} user={user} />\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default withFirebaseAuth({\n  firebaseAppAuth,\n})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}